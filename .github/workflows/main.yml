name: Build and Deploy Pet Service

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Filter changes in src/main
        id: filter
        uses: dorny/paths-filter@v2
        with:
          filters: |
            src-main:
              - 'src/main/**'

      - name: Set up JDK 17
        if: steps.filter.outputs.src-main == 'true'
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Maven packages
        if: steps.filter.outputs.src-main == 'true'
        uses: actions/cache@v2
        with:
          path: ~/.m2
          key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
          restore-keys: ${{ runner.os }}-m2

      - name: Build with Maven
        if: steps.filter.outputs.src-main == 'true'
        run: mvn clean package -DskipTests
        env:
          SPRING_PROFILES_ACTIVE: prod
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          FIREBASE_PRIVATE_KEY_ID: ${{ secrets.FIREBASE_PRIVATE_KEY_ID }}
          FIREBASE_PRIVATE_KEY: ${{ secrets.FIREBASE_PRIVATE_KEY }}
          FIREBASE_CLIENT_EMAIL: ${{ secrets.FIREBASE_CLIENT_EMAIL }}
          FIREBASE_CLIENT_ID: ${{ secrets.FIREBASE_CLIENT_ID }}
          GOOGLE_MAPS_API_KEY: ${{ secrets.GOOGLE_MAPS_API_KEY }}

      - name: Find JAR file
        if: steps.filter.outputs.src-main == 'true'
        id: find-jar
        run: |
          JAR_FILE=$(find target -name "*.jar" | head -n 1)
          echo "JAR_FILE=$JAR_FILE" >> $GITHUB_ENV

      - name: Log in to Docker Hub
        if: steps.filter.outputs.src-main == 'true'
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        if: steps.filter.outputs.src-main == 'true'
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          build-args: |
            JAR_FILE=${{ env.JAR_FILE }}
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/findyourpet-backend:latest
